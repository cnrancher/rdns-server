#!/bin/bash
set -e

source $(dirname $0)/version

cd $(dirname $0)/..

if [ $# -lt 1 ]; then
	echo "insufficient args, please run as: ./start route53 or ./start etcdv3"
	exit 1
fi

if [ $1 == "route53" ]; then
	if [ -z $MYSQL_ROOT_PASSWORD ];then
		echo "please set MYSQL_ROOT_PASSWORD environment"
		exit 1
	fi
	if [ -z $AWS_HOSTED_ZONE_ID ];then
		echo "please set AWS_HOSTED_ZONE_ID environment"
		exit 1
	fi
	if [ -z $AWS_ACCESS_KEY_ID ];then
		echo "please set AWS_ACCESS_KEY_ID environment"
		exit 1
	fi
	if [ -z $AWS_SECRET_ACCESS_KEY ];then
		echo "please set AWS_SECRET_ACCESS_KEY environment"
		exit 1
	fi
	if [ -z $DSN ];then
		echo "please set DSN environment"
		exit 1
	fi
	if [ -z $DATABASE_LEASE_TIME ]; then
		export DATABASE_LEASE_TIME="240h"
	fi
	if [ -z $TTL ]; then
		export TTL="10"
	fi
	docker-compose -f deploy/route53/mysql-compose.yaml up -d
	sleep 3
	database/migrate-up.sh
	docker-compose -f deploy/route53/rdns-compose.yaml up -d
fi

if [ $1 == "etcdv3" ]; then
	if [ -z $DOMAIN ];then
		echo "please set DOMAIN environment"
		exit 1
	fi
	if [ -z $ETCD_ENDPOINTS ];then
		echo "please set ETCD_ENDPOINTS environment"
		exit 1
	fi
	if [ -z $ETCD_PREFIX_PATH ]; then
		export ETCD_PREFIX_PATH="/rdnsv3"
	fi
	if [ -z $ETCD_LEASE_TIME ]; then
		export ETCD_LEASE_TIME="240h"
	fi
	if [ -z $CORE_DNS_FILE ]; then
		export CORE_DNS_FILE="/etc/rdns/config/Corefile"
	fi
	if [ -z $CORE_DNS_PORT ]; then
		export CORE_DNS_PORT="53"
	fi
	if [ -z $CORE_DNS_CPU ]; then
		export CORE_DNS_CPU="50%"
	fi
	if [ -z $CORE_DNS_DB_FILE ]; then
		export CORE_DNS_DB_FILE=""
	fi
	if [ -z $CORE_DNS_DB_ZONE ]; then
		export CORE_DNS_DB_ZONE=""
	fi
	if [ -z $TTL ]; then
		export TTL="60"
	fi
	rm -rf deploy/etcdv3/config/Corefile
	docker-compose -f deploy/etcdv3/rdns-compose.yaml up -d
fi